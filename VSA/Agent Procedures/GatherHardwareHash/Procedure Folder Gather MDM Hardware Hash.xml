<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Gather MDM Hardware Hash" treePres="3" treeFullPath="myProcedures - vladislav.semko@kaseya.com.Gather MDM Hardware Hash">
    <Procedure name="Gather MDM Hardware Hash" treePres="3" id="478160444" treeFullPath="myProcedures - vladislav.semko@kaseya.com.Gather MDM Hardware Hash">
      <Body description="">
        <Statement description="This procedure facilitates retrieving device hardware data from the Mobile Device Management (MDM) CIM namespace&#xD;&#xA;Version: 0.2&#xD;&#xA;Author: Proserv Team - VS&#xD;&#xA;//&#xD;&#xA;Assign the collector endpoint" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="YOUR_COLLECTOR.root.kserver" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="CollectorMachine" />
        </Statement>
        <Statement description="//" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.machName#.hwhash" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="FileName" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/#FileName#" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="OutputFile" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/HWhash.CSV" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="OutputCSV" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="$hash = (Get-CimInstance -Namespace root/cimv2/mdm/dmmap -Class MDM_DevDetail_Ext01 -Filter &quot;&quot;&quot;InstanceID='Ext' AND ParentID='./DevDetail'&quot;&quot;&quot;).DeviceHardwareData; if ( -not [string]::IsNullOrEmpty($hash)) { [PSCustomObject]@{Endpoit = $env:COMPUTERNAME;  HardwareHash = $hash} | Export-csv -Path #OutputFile# -NoTypeInformation -Force -Encoding ascii}" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="PoShCommand" />
        </Statement>
        <Statement description="Separate multiple email addresses with commas:" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="test" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="EmailRecipients" />
        </Statement>
        <If description="If the hash already gathered">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#OutputFile#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="DeleteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#OutputFile#" />
            </Statement>
          </Then>
        </If>
        <If description="Overwrite the hash">
          <Condition name="Windows 32 or 64 Bit Check">
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
          </Condition>
          <Then>
            <Statement name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command &quot;#PoShCommand#&quot;" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="True" />
            </Statement>
          </Then>
        </If>
        <If description="">
          <Condition name="Windows 32 or 64 Bit Check">
            <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
          </Condition>
          <Then>
            <Statement name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command &quot;#PoShCommand#&quot;" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
          </Then>
        </If>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#OutputFile#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement description="Unable to gather the hardware hash" name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="ERROR: Unable to retrieve device hardware data (hash) from #vAgentConfiguration.machName#" />
            </Statement>
          </Then>
          <Else>
            <Statement description="Hardware hash gathered" name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="INFO: Retrieved the device hardware data (hash) from #vAgentConfiguration.machName#" />
            </Statement>
            <Statement description="Write the hash to the VSA Server's Get File folder" name="GetFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#OutputFile#" />
              <Parameter xsi:type="StringParameter" name="KServerFileName" value="#FileName#" />
              <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
            </Statement>
            <If description="Check if the procedure is running on the collector">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#vAgentConfiguration.Machine_GroupID#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                <Parameter xsi:type="StringParameter" name="Value" value="#CollectorMachine#" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="INFO: It's the collector endpoint. Waiting for the other endpoints" />
                </Statement>
                <Statement description="adjust the pause depending on your endpoints' performance" name="PauseScript" continueOnFail="false">
                  <Parameter xsi:type="IntegerParameter" name="Seconds" value="120" />
                </Statement>
                <Statement description="Collect all the collected files" name="GetVariable" continueOnFail="false">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="$All = @(); foreach ( $csv in $((Get-ChildItem -Filter *.hwhash).FullName) ) { $data = Import-Csv -Path $csv; $All += $data; Remove-Item -Path $csv -Force -Confirm:$false }; $All | Export-Csv -Path #OutputCSV# -NoTypeInformation -Encoding ASCII -Force" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="PoShCollect" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command &quot;#PoShCollect#&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="True" />
                </Statement>
                <If description="Check if files gathered successfully">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#OutputCSV#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="ERROR: Unable to gather device hardware data (hash)!" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="INFO: Gathered device hardware data (hash)." />
                    </Statement>
                    <Statement name="GetVariable" continueOnFail="false">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#OutputCSV#" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="TheHash" />
                    </Statement>
                    <Statement name="SendEmail" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="To" value="#EmailRecipients#" />
                      <Parameter xsi:type="StringParameter" name="Subject" value="Hardware Hash CSV" />
                      <Parameter xsi:type="MultiLineStringParameter" name="Body" value="#TheHash#" />
                    </Statement>
                    <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Path" value="#OutputCSV#" />
                    </Statement>
                  </Else>
                </If>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="INFO: Transfer data #OutputFile# to the collector endpoint." />
                </Statement>
                <Statement name="Transfer File" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="#CollectorMachine#" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="#OutputFile#" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="#OutputFile#" />
                </Statement>
              </Else>
            </If>
          </Else>
        </If>
      </Body>
    </Procedure>
  </Folder>
</ScExport>