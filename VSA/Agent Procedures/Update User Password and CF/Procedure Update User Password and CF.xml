<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Procedure name="Update User Password and CF" treePres="3" id="1319846817" treeFullPath="myProcedures - vladislav.semko@kaseya.com.Update User Password and CF">
    <Body description="">
      <Statement description="This procedure facilitates update of a specified local account's password on a Windows client and stores the password in the designated Custom Fields.&#xD;&#xA;The procedure requires Windows Management Framework version 5.1 or newer installed on the endpoint&#xD;&#xA;Version: 0.1&#xD;&#xA;Author: Proserv Team - VS&#xD;&#xA;Provide the local user name to update password" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="YOUR_USER" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="UserName" />
      </Statement>
      <Statement description="Specify new user's password length" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="16" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="PasswordLength" />
      </Statement>
      <Statement name="Execute Powershell" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="Add-Type -AssemblyName System.Web; do { $Pwd = [System.Web.Security.Membership]::GeneratePassword(16, 1)} until ($Pwd -match '\d'); Write-Output $Pwd" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:psresult#" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="Password" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="$Name = '#UserName#'; $Pwd = '#Password#'; $Acc = try { Get-LocalUser -Name $Name -ErrorAction Stop } catch { $null }; if ($null -eq $Acc) { Write-Output &quot;&quot;&quot;ERROR: Account $Name not found on the system $($env:COMPUTERNAME)!&quot;&quot;&quot; } else { $Msg = try { $Acc | Set-LocalUser -Password $(ConvertTo-SecureString $Pwd -AsPlainText -Force) -ErrorAction Stop; &quot;&quot;&quot;SUCCESS&quot;&quot;&quot; } catch { &quot;&quot;&quot;ERROR: Password for Account $Name not set on the system $($env:COMPUTERNAME)! $_&quot;&quot;&quot; }; Write-Output $Msg }" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="PoShCommand" />
      </Statement>
      <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command &quot;#PoShCommand#&quot;" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:cmdresults#" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="Result" />
      </Statement>
      <If description="">
        <Condition name="CheckVariable">
          <Parameter xsi:type="StringParameter" name="VariableName" value="#Result#" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
          <Parameter xsi:type="StringParameter" name="Value" value="SUCCESS" />
        </Condition>
        <Then>
          <Statement description="Specify the Custom Field to store the new  password" name="UpdateSystemInfo" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="ColumnName" value="Pwd" />
            <Parameter xsi:type="StringParameter" name="Value" value="#Password#" />
          </Statement>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="INFO: Password u, the Custom Field updated" />
          </Statement>
        </Then>
      </If>
      <Statement name="WriteScriptLogEntry" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Comment" value="#Result#" />
      </Statement>
    </Body>
  </Procedure>
</ScExport>